% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pkgpurl.gen.R
\name{process_pkg}
\alias{process_pkg}
\title{Process R Markdown package from source to installation}
\usage{
process_pkg(
  path = ".",
  add_copyright_notice = pal::pkg_config_val(key = "add_copyright_notice", pkg =
    this_pkg, default = TRUE),
  add_license_notice = pal::pkg_config_val(key = "add_license_notice", pkg = this_pkg,
    default = TRUE),
  gen_pkgdown_ref = pal::pkg_config_val(key = "gen_pkgdown_ref", pkg = this_pkg, default
    = TRUE),
  env = parent.frame(),
  document = TRUE,
  build_and_install = TRUE,
  restart_r_session = build_and_install,
  use_rstudio_api = NULL,
  quiet = TRUE,
  roclets = NULL,
  args = getOption("devtools.install.args"),
  dependencies = NA,
  upgrade = "never",
  keep_source = getOption("keep.source.pkgs")
)
}
\arguments{
\item{path}{Path to the root of the package directory.}

\item{add_copyright_notice}{Whether or not to add a \strong{copyright notice} at the beginning of the generated \code{.R} files as recommended by e.g. the \href{https://www.gnu.org/licenses/gpl-howto.html}{GNU licenses}. The notice consists of the name and description of the program and the word \code{Copyright (C)} followed by the release years and the name(s) of the copyright holder(s), or if not specified, the author(s). The year is always the current year. All the other information is extracted from the package's \code{DESCRIPTION} file. A logical scalar. Only applies if \code{path} \link[pal:is_pkg_dir]{is actually an R package directory}.}

\item{add_license_notice}{Whether or not to add a \strong{license notice} at the beginning of the generated \code{.R} files as recommended by e.g. the \href{https://www.gnu.org/licenses/gpl-howto.html}{GNU licenses}. The license is determined from the package's \code{DESCRIPTION} file and currently only the \href{https://spdx.org/licenses/AGPL-3.0-or-later.html}{\code{AGPL-3.0-or-later} license} is supported. A logical scalar. Only applies if \code{path} \link[pal:is_pkg_dir]{is actually an R package directory}.}

\item{gen_pkgdown_ref}{Whether or not to overwrite \href{https://pkgdown.r-lib.org/}{pkgdown}'s \href{https://pkgdown.r-lib.org/reference/build_reference.html#reference-index}{reference index} in the configuration file \verb{_pkgdown.yml} with an auto-generated one based on the main input file as described in \code{\link[=gen_pkgdown_ref]{gen_pkgdown_ref()}}. A logical scalar. Only applies if \code{path} \link[pal:is_pkg_dir]{is actually an R package directory}, \link[pal:is_pkgdown_dir]{pkgdown is set up} and a \link[=main_rmd]{main R Markdown file} exists.}

\item{env}{Environment to evaluate R Markdown inline code expressions in when generating the pkgdown reference index. Only relevant if
\code{gen_pkgdown_ref = TRUE}.}

\item{document}{Whether or not to re-build the package documentation after purling \verb{Rmd/*.Rmd} to \verb{R/*.gen.R}.}

\item{build_and_install}{Whether or not to build and install the package after purling \verb{Rmd/*.Rmd} to \verb{R/*.gen.R}.}

\item{restart_r_session}{Whether or not to restart the R session. Highly recommended if \code{build_and_install = TRUE}, but only possible when R is run within
RStudio. Note that the R session is always restarted if \code{use_rstudio_api = TRUE}.}

\item{use_rstudio_api}{Whether or not to rely on the RStudio API to install the built package (which always triggers an R session restart regardless of
\code{restart_r_session}). If \code{NULL}, the RStudio API is automatically used if possible, i.e. RStudio is running. Note that installation without the RStudio API
has known issues, see section \emph{Details} below for further information.}

\item{quiet}{Whether or not to suppress printing status output from internal processing.}

\item{roclets}{Character vector of roclet names to use with package.
The default, \code{NULL}, uses the roxygen \code{roclets} option,
which defaults to \code{c("collate", "namespace", "rd")}.}

\item{args}{An optional character vector of additional command line
arguments to be passed to \verb{R CMD INSTALL}. This defaults to the
value of the option \code{"devtools.install.args"}.}

\item{dependencies}{Which dependencies do you want to check?
Can be a character vector (selecting from "Depends", "Imports",
"LinkingTo", "Suggests", or "Enhances"), or a logical vector.

\code{TRUE} is shorthand for "Depends", "Imports", "LinkingTo" and
"Suggests". \code{NA} is shorthand for "Depends", "Imports" and "LinkingTo"
and is the default. \code{FALSE} is shorthand for no dependencies (i.e.
just check this package, not its dependencies).

The value "soft" means the same as \code{TRUE}, "hard" means the same as \code{NA}.

You can also specify dependencies from one or more additional fields,
common ones include:
\itemize{
\item Config/Needs/website - for dependencies used in building the pkgdown site.
\item Config/Needs/coverage for dependencies used in calculating test coverage.
}}

\item{upgrade}{Should package dependencies be upgraded? One of "default", "ask", "always", or "never". "default"
respects the value of the \code{R_REMOTES_UPGRADE} environment variable if set,
and falls back to "ask" if unset. "ask" prompts the user for which out of
date packages to upgrade. For non-interactive sessions "ask" is equivalent
to "always". \code{TRUE} and \code{FALSE} are also accepted and correspond to
"always" and "never" respectively.}

\item{keep_source}{If \code{TRUE} will keep the srcrefs from an installed
package. This is useful for debugging (especially inside of RStudio).
It defaults to the option \code{"keep.source.pkgs"}.}
}
\value{
\code{path}, invisibly.
}
\description{
Executes all steps to process an R package written in R Markdown format from source to installation in one go:
\enumerate{
\item Purl all relevant \verb{Rmd/*.Rmd} files to \verb{R/*.gen.R} files using \code{\link[=purl_rmd]{purl_rmd()}}.
\item Re-generate the \href{https://pkgdown.r-lib.org/reference/build_reference.html#reference-index}{pkgdown reference index} based on the package's \link[=main_rmd]{main R Markdown file} using \code{\link[=gen_pkgdown_ref]{gen_pkgdown_ref()}} (if \code{gen_pkgdown_ref = TRUE}).
\item Re-build the package documentation using \code{\link[devtools:document]{devtools::document()}} (if \code{document = TRUE}).
\item Build and install the package (if \code{build_and_install = TRUE}). This is done either using
\code{\link[rstudioapi:executeCommand]{rstudioapi::executeCommand(commandId = "buildFull")}} (if \code{use_rstudio_api = TRUE}) or using \code{\link[devtools:install]{devtools::install()}} (if
\code{use_rstudio_api = FALSE}).
\item Restarts the R session using \code{\link[rstudioapi:restartSession]{rstudioapi::restartSession()}} (if either \code{restart_r_session = TRUE} or \code{use_rstudio_api = TRUE}).
}
}
\details{
Note that the installation via \code{\link[devtools:install]{devtools::install()}} (i.e. \code{use_rstudio_api = FALSE}) is known to fail in certain situations (lazy-load database corruption)
due to \href{https://bugs.r-project.org/show_bug.cgi?id=16644}{unresolved deficiencies} in \R's namespace unloading. If you encounter an error, simply restart the
\R session and try again.

This function is also registered as an \href{https://rstudio.github.io/rstudioaddins/}{RStudio add-in}, allowing RStudio users to assign a \href{https://support.rstudio.com/hc/en-us/articles/206382178-Customizing-Keyboard-Shortcuts-in-the-RStudio-IDE}{custom shortcut} to it or to invoke it from the \href{https://www.rstudio.com/blog/rstudio-1-4-a-quick-tour/#command-palette--shortcuts}{command palette}.
}
\seealso{
Other high-level functions:
\code{\link{lint_rmd}()},
\code{\link{load_pkg}()},
\code{\link{purl_rmd}()},
\code{\link{run_nopurl_rmd}()}
}
\concept{high_lvl}
