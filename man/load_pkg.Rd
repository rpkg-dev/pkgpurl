% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pkgpurl.gen.R
\name{load_pkg}
\alias{load_pkg}
\title{Load R Markdown package}
\usage{
load_pkg(
  path = ".",
  add_copyright_notice = pal::pkg_config_val(key = "add_copyright_notice", pkg =
    this_pkg, default = TRUE),
  add_license_notice = pal::pkg_config_val(key = "add_license_notice", pkg = this_pkg,
    default = TRUE),
  gen_pkgdown_ref = pal::pkg_config_val(key = "gen_pkgdown_ref", pkg = this_pkg, default
    = FALSE),
  reset = TRUE,
  recompile = FALSE,
  export_all = TRUE,
  helpers = TRUE,
  quiet = FALSE,
  ...
)
}
\arguments{
\item{path}{Path to the root of the package directory.}

\item{add_copyright_notice}{Whether or not to add a \strong{copyright notice} at the beginning of the generated \code{.R} files as recommended by e.g. the \href{https://www.gnu.org/licenses/gpl-howto.html}{GNU licenses}. The notice consists of the name and description of the program and the word \code{Copyright (C)} followed by the release years and the name(s) of the copyright holder(s), or if not specified, the author(s). The year is always the current year. All the other information is extracted from the package's \code{DESCRIPTION} file. A logical scalar. Only applies if \code{path} \link[pal:is_pkg_dir]{is actually an R package directory}.}

\item{add_license_notice}{Whether or not to add a \strong{license notice} at the beginning of the generated \code{.R} files as recommended by e.g. the \href{https://www.gnu.org/licenses/gpl-howto.html}{GNU licenses}. The license is determined from the package's \code{DESCRIPTION} file and currently only the \href{https://spdx.org/licenses/AGPL-3.0-or-later.html}{\code{AGPL-3.0-or-later} license} is supported. A logical scalar. Only applies if \code{path} \link[pal:is_pkg_dir]{is actually an R package directory}.}

\item{gen_pkgdown_ref}{Whether or not to overwrite \href{https://pkgdown.r-lib.org/}{pkgdown}'s \href{https://pkgdown.r-lib.org/reference/build_reference.html#reference-index}{reference index} in the configuration file \verb{_pkgdown.yml} with an auto-generated one based on the main input file as described in \code{\link[=gen_pkgdown_ref]{gen_pkgdown_ref()}}. A logical scalar. Only applies if \code{path} \link[pal:is_pkg_dir]{is actually an R package directory}, \link[pal:is_pkgdown_dir]{pkgdown is set up} and a \link[=main_rmd]{main R Markdown file} exists.}

\item{reset}{clear package environment and reset file cache before loading
any pieces of the package. This largely equivalent to running
\code{\link[pkgload:unload]{unload()}}, however the old namespaces are not completely removed and no
\code{.onUnload()} hooks are called. Use \code{reset = FALSE} may be faster for
large code bases, but is a significantly less accurate approximation.}

\item{recompile}{DEPRECATED. force a recompile of DLL from source code, if
present. This is equivalent to running \code{\link[pkgbuild:clean_dll]{pkgbuild::clean_dll()}} before
\code{load_all}}

\item{export_all}{If \code{TRUE} (the default), export all objects.
If \code{FALSE}, export only the objects that are listed as exports
in the NAMESPACE file.}

\item{helpers}{if \code{TRUE} loads \pkg{testthat} test helpers.}

\item{quiet}{if \code{TRUE} suppresses output from this function.}

\item{...}{Additional arguments passed to \code{\link[pkgload:load_all]{pkgload::load_all()}}.}
}
\value{
\code{path}, invisibly.
}
\description{
Executes the steps to load an R package written in R Markdown format in one go:
\enumerate{
\item Purl all relevant \verb{Rmd/*.Rmd} files to \verb{R/*.gen.R} files using \code{\link[=purl_rmd]{purl_rmd()}}.
\item Loads the package using \code{\link[devtools:load_all]{devtools::load_all()}}.
}
}
\seealso{
Other high-level functions:
\code{\link{lint_rmd}()},
\code{\link{process_pkg}()},
\code{\link{purl_rmd}()},
\code{\link{run_nopurl_rmd}()}
}
\concept{high_lvl}
