% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pkgpurl.gen.R
\name{gen_pkgdown_ref}
\alias{gen_pkgdown_ref}
\title{Generate pkgdown reference index}
\usage{
gen_pkgdown_ref(rmd, env = parent.frame())
}
\arguments{
\item{rmd}{The (R) Markdown file content as a character scalar.}

\item{env}{Environment to evaluate R Markdown inline code expressions in.}
}
\value{
A list.
}
\description{
Generates the \href{https://pkgdown.r-lib.org/reference/build_reference.html#reference-index}{pkgdown reference index} based on the heading hierarchy structure of
a package's main \code{.Rmd} file.
}
\details{
Basically, all elements of the pkgdown reference index except \code{desc} keys are derived from \code{rmd}'s \href{https://pandoc.org/MANUAL.html#headings}{Markdown \strong{headings}} and their \strong{hierarchy}. The \code{desc} keys, however, are assembled from the paragraph(s) below some
specially named headings. See below for details.
}
\section{Special headings}{
Headings that exactly match certain strings (case-insensitive, but without any inline formatting or additional text) are treated specially. Here's an
overview:\tabular{ll}{
   \strong{Headings} \tab \strong{Meaning} \cr
   DESCRIPTION \tab Paragraph(s) below this heading, which in turn is hierarchically below a \code{title} or \code{subtitle} heading, are used as the description for this very (sub)title (\code{desc} in the pkgdown reference index). \cr
   EXPORTED \tab Will never be used as \code{title} or \code{subtitle} in the pkgdown reference index (i.e. ignored). Simply serves as a (usually top-level) heading to indicate that the objects defined below it are \href{https://r-pkgs.org/dependencies-in-practice.html#exports}{exported} by the package. \cr
   INTERNAL , NOTES    , TEMPORARY, TMP \tab Everything that's hierarchically below one of these headings is completely ignored for pkgdown reference index generation. \cr
}
}

\section{Parsing rules}{
To be able to unambiguously map an \code{.Rmd} file's heading hierarchy to the pkgdown reference index, some parsing rules are necessary. Attention must be paid
to the fact that, while (R) Markdown supports up to six heading levels (corresponding to HTML's \verb{<h1>}–\verb{<h6>} tags), the pkgdown reference index only
supports up to two (\code{title} and \code{subtitle}).

The following rules define how the reference index is generated:
\enumerate{
\item Headings below a heading named
\emph{INTERNAL}, \emph{NOTES}, \emph{TEMPORARY} or \emph{TMP}
(case-insensitive, but without any inline formatting) are simply ignored when generating the reference index.
\item Every heading that is a) inline-formatted as \href{https://pandoc.org/MANUAL.html#verbatim}{verbatim} and b) doesn't contain any whitespace characters is
considered to be the name of a help topic (usually the name of a function or dataset) to be included in the reference index. This maps to the \code{contents}
key of the reference index' YAML.
\item Non-help-topic headings above help topic headings are used as reference index (sub)titles as far as hierarchical nesting allows. More precisely,
non-help-topic headings \emph{of the highest two levels} above the help topic heading are used as title and subtitle, the rest of the headings above the help
topic heading is ignored – and a heading named \emph{EXPORTED} (case-insensitive, but without any inline formatting) is always ignored regardless of its
level. This maps to the \code{title} and \code{subtitle} keys of the reference index' YAML.
\item Paragraph(s) below a heading named \emph{DESCRIPTION} (case-insensitive, but without any inline formatting), that in turn is hierarchically below a title or
subtitle heading, are used as the description for the respective (sub)title. This maps to the \code{desc} key of the reference index' YAML.
}
}

\section{Parsing example}{
An example might better explain how the parsing rules work than a thousand words, so here's a simplified one.

When fed to \code{gen_pkgdown_ref()}, the following R Markdown content...

\if{html}{\out{<div class="sourceCode rmd">}}\preformatted{---
editor_options:
  markdown:
    wrap: 80
---

# `main_fn`

The fn below is under no title or subtitle in the pkgdown index.

```\{r\}
main_fn <- function(...) \{...\}
```

# First group of fns

## DESCRIPTION

The description text for *First group of fns*.

## `group_wide_fn`

The fn below is only under a title, but no subtitle in the pkgdown index.

```\{r\}
group_wide_fn <- function(...) \{...\}
```

## Some subgroup

The fns below are both under a title and subtitle in the pkgdown index.

### `subgroup_fn_1`

```\{r\}
subgroup_fn_1 <- function(...) \{...\}
```

### `subgroup_fn_2`

```\{r\}
subgroup_fn_2 <- function(...) \{...\}
```

### Sub-subgroup

The above *Sub-subgroup* heading is ignored for the pkgdown index because the
latter only supports up to two heading levels.

The fn below thus moves one hierarchy level up in the pkgdown index.

#### `sub_subgroup_fn`

```\{r\}
sub_subgroup_fn <- function(...) \{...\}
```

## Another subgroup

### DESCRIPTION

The description text for *Another subgroup*.

### `another_subgroup_fn`

```\{r\}
another_subgroup_fn <- function(...) \{...\}
```

# Second group of fns

## Yet another subgroup

### `yet_another_subgroup_fn`

```\{r\}
yet_another_subgroup_fn <- function(...) \{...\}
```
}\if{html}{\out{</div>}}

...yields this pkgdown index (converted \link[yaml:as.yaml]{to YAML}):

\if{html}{\out{<div class="sourceCode">}}\preformatted{reference:
- contents: main_fn
- title: First group of fns
  desc: The description text for *First group of fns*.
- contents: group_wide_fn
- subtitle: Some subgroup
- contents:
  - subgroup_fn_1
  - subgroup_fn_2
  - sub_subgroup_fn
- subtitle: Another subgroup
  desc: The description text for *Another subgroup*.
- contents: another_subgroup_fn
- title: Second group of fns
- subtitle: Yet another subgroup
- contents: yet_another_subgroup_fn
}\if{html}{\out{</div>}}
}

\section{Inline R code}{
R Markdown \href{https://rmarkdown.rstudio.com/lesson-4.html}{inline code} is fully supported in headings and descriptions, except for the above mentioned special
headings (otherwise, they're not recognized as special headings anymore).
}

\examples{
if (pal::is_pkg_installed("tinkr")) {
  yay::gh_text_file(path = "Rmd/pal.Rmd",
                    owner = "salim-b",
                    name = "pal") |>
    pkgpurl::gen_pkgdown_ref() |>
    yaml::as.yaml() |>
    cat()
}
}
\concept{low_lvl}
